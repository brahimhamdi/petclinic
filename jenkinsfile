pipeline {
    agent any
    
    tools {
        maven "M3"
        }
    stages {
        stage('GitClone') {
            steps {
                script
                {
                // git branch: 'main', url: 'https://github.com/brahimhamdi/petclinic'
                if (isUnix())
                    {
                        sh 'git clone https://github.com/brahimhamdi/petclinic /tmp/workspace/petclinic-pipe'
                    }
                    else
                    {
                        bat 'git clone https://github.com/brahimhamdi/petclinic /tmp/workspace/petclinic-pipe'
                    }
                }    
            }
        }
    stage('Build') {
        steps {
            script
            {
                if (isUnix())
                {
                    sh 'mvn -fn clean package checkstyle:checkstyle pmd:pmd'
                    }
                else
                {
                    bat 'mvn -fn clean package checkstyle:checkstyle pmd:pmd'
                }
            }
        }}
    stage('QA Check & publish') {
        steps {
            script
            {
                recordIssues(tools: [checkStyle(), pmdParser()])
            }
        }
        }
    stage('Rapports de Tests') {
            steps {
                script
                {
                    if (isUnix())
                    {
                        sh 'echo Rapports de tests'
                    }
                    else
                    {
                        bat 'echo Rapports de tests'
                    }
                }
            }
            post {
                success {
                    junit '**/target/surefire-reports/TEST-*.xml'
                }
            }
        }
        stage('Archivage artifacts') {
            steps {
                script
                {
                    if (isUnix())
                    {
                        sh 'echo Archivage des artifacts'
                    }
                    else
                    {
                        bat 'echo Archivage des artifacts'
                    }
                }
            }
            post {
                success {
                    archiveArtifacts 'target/*.jar'
                }
            }
        }
    }
}

